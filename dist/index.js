import*as e from"react";const{useEffect:n,useState:t}=e,i=/Windows.*Chrome|Windows.*Firefox|Linux.*Chrome/,o={enabled:!0,url:"https://ipv4.icanhazip.com/",timeout:5e3,interval:5e3};class r{pollingConfigs;static instance;intervalId;constructor(e=o){this.pollingConfigs=e}setIntervalId(e){this.intervalId=e}getIntervalId(){return this.intervalId}static getInstance(e){return r.instance||(r.instance=new r),r.instance.setPollingConfigs(e),r.instance}setPollingConfigs(e){i.test(global.navigator?.userAgent)?"object"==typeof e?this.pollingConfigs={...o,...e}:e&&(this.pollingConfigs=o):this.pollingConfigs={...o,enabled:!1}}ping({url:e,timeout:n}){return new Promise(((t,i)=>{const o=new XMLHttpRequest;o.onerror=i,o.ontimeout=i,o.onreadystatechange=()=>{o.readyState===o.HEADERS_RECEIVED&&(o.status?t():i())},o.open("HEAD",e),o.timeout=n,o.send()}))}}const a=(e=!0)=>{const[i,o]=t(!0),a=r.getInstance(e),s=()=>{o(!0)},l=()=>{o(!1)};return n((()=>{window.addEventListener("online",s),window.addEventListener("offline",l);let e=a.getIntervalId();const{enabled:n,url:t,timeout:i,interval:r}=a.pollingConfigs;return n&&t&&(e&&clearInterval(e),e=window.setInterval((async()=>{try{await a.ping({url:t,timeout:i}),o(!0)}catch(e){o(!1)}}),r),a.setIntervalId(e)),()=>{window.removeEventListener("online",s),window.removeEventListener("offline",l),n&&clearInterval(e)}}),[]),{isOnline:i}};let s=!1;const l=e=>{s=global.navigator&&"connection"in global.navigator&&"effectiveType"in global.navigator.connection;const i={supported:s,effectiveConnectionType:s?global.navigator.connection.effectiveType:e},[o,r]=t(i);return n((()=>{if(s){const e=global.navigator.connection,n=()=>{r({supported:s,effectiveConnectionType:e.effectiveType})};return e.addEventListener("change",n),()=>{e.removeEventListener("change",n)}}}),[]),{...o,setNetworkStatus:e=>{r({supported:s,...e})}}};export{l as useNetworkStatus,a as useOnlineEffect};
